{
  "resources": {
    "grabbingTextSnippets": "Grabbing Snippets for locale __name__",
    "textSnippetsCannotBeGrabbed": "Text Snippets cannot be grabbed because the server does not support the necessary endpoint.",
    "grabbingApplicationJavaScript": "Grabbing Application JavaScript __name__",
    "applicationJavaScriptCannotBeGrabbed": "Application-level JavaScript cannot be grabbed because the server does not support the necessary endpoints..",
    "globalElementsCannotBeGrabbed": "Global elements cannot be grabbed because the server does not support the necessary endpoints.",
    "elementsCannotBeGrabbed": "Elements cannot be grabbed because the server does not support the necessary endpoints.",
    "grabbingElement": "Grabbing Element __name__",
    "stacksCannotBeGrabbed": "Stacks cannot be grabbed because the server does not support the necessary endpoints.",
    "grabbingStack": "Grabbing Stack __name__",
    "grabbingTheme": "Grabbing Theme __name__",
    "grabbingWidget": "Grabbing Widget __name__",
    "grabbingWidgetInstance": "Grabbing Widget instance __name__",
    "allDone": "all done...",
    "fileIsNotRecognized": "File __name__ is not recognised.",
    "localeIsNotRecognized": "Locale __name__ is not recognised.",
    "notAdministrationInterface": "__name__ does not access a Commerce Cloud administration interface",
    "invalidOperation": "Invalid Operation",
    "sendingPath": "Sending __path__ to __node__",
    "alreadyBeenModified": "__path__ has already been modified by another user.",
    "optimisticLock": "Optimistic Lock",
    "unexpectedErrorSending": "An unexpected error occurred when sending __path__ to the server.\nHTTP Status Code: __statusCode__\nError Code : __errorCode__\nMessage : __message__",
    "connectionResetAndRetrying": "Connection was unexpectedly reset by the server - retrying...",
    "unexpectedError": "Unexpected Error",
    "nodeOptionText": "URL for the Commerce Cloud administration interface, for example, http://localhost:9080",
    "usernameOptionText": "The user name for the Commerce Cloud administration interface",
    "passwordOptionText": "The password for the Commerce Cloud administration interface",
    "helpOptionText": "Display help message and exit.",
    "verboseOptionText": "Enable verbose logging",
    "grabOptionText": "Copy all available content from the Commerce Cloud instance to the base directory",
    "refreshOptionText": "Refresh content from the Commerce Cloud instance in the specified directory",
    "portOptionText": "Specify the port that CCProxy will listen to (default 8088)",
    "putAllOptionText": "Take all files that are under the specified directory, and any of its sub-directories, and send them back to the Commerce Cloud administration interface",
    "putOptionText": "Send a single file back to the Commerce Cloud administration interface",
    "startProxyOptionText": "Start a local proxy to substitute Commerce Cloud Resources with local modifications",
    "baseOptionText": "Use the supplied directory as the base directory",
    "localeOptionText": "Force default locale to the supplied value",
    "allLocalesOptionText": "Get text data for all locales rather than just the current locale",
    "cleanOptionText": "Used with the --grab option, deletes all local files previously created",
    "noPopupsOptionText": "Used with the --put option, suppresses display of popups when an error occurs",
    "applicationKeyOptionText" : "The application key to use to log in to the Commerce Cloud administration interface",
    "applicationJavaScriptCannotBeSent": "Application-level JavaScript cannot be sent because the server does not support the necessary endpoint.",
    "elementsCannotBeSent": "The Element file __path__ cannot be sent to the server because there is no suitable endpoint.",
    "stacksCannotBeSent": "The Stack file __path__ cannot be sent to the server because the server does not support the necessary endpoint.",
    "textSnippetsCannotBeSent": "The Text Snippet file __path__ cannot be sent to the server because the server does not support the necessary endpoint.",
    "cannotSendToDifferentNode": "You cannot send __path__ to __node__ as it was originally grabbed from __configMetadataNode__.",

    "widgetDescriptorMetadataCannotBeGrabbed": "Widget metadata cannot be grabbed because the server does not support the necessary endpoints.",
    "widgetInstanceMetadataCannotBeGrabbed": "Widget instance metadata cannot be grabbed because the server does not support the necessary endpoints.",
    "baseWidgetContentCannotBeGrabbed": "Base widget content cannot be grabbed because the server does not support the necessary endpoints.",
    "widgetConfigCannotBeGrabbed": "Widget configuration metadata cannot be grabbed because the server does not support the necessary endpoints.",
    "updateInstancesOptionText": "Update all instance templates, less and locale strings using their respective base assets",
    "noInstanceConfigUpdateText": "Prevent sending instance configuration changes to the Commerce Cloud instance",
    "widgetContentFileCannotBeSent": "The widget file __path__ cannot be sent to the server because the server does not support the necessary endpoint.",
    "widgetJavaScriptCannotBeGrabbed": "The widget JavaScript file __path__ cannot be sent because the server does not support the necessary endpoint.",

    "transferAllOptionText": "Transfer all files to the given Commerce Cloud administration interface from the local disk, matching by name",
    "transferOptionText": "Transfer a single file to the given Commerce Cloud administration interface from the local disk, matching by name",
    "matchingThemeFound": "Theme called __name__ found on target Commerce Cloud administration interface",
    "matchingElementFound": "Element for path __path__ found on target Commerce Cloud administration interface",
    "matchingStackInstanceFound": "Stack instance for path __path__ found on target Commerce Cloud administration interface",
    "matchingWidgetFound": "Widget for path __path__ found on target Commerce Cloud administration interface",
    "matchingWidgetInstanceFound": "Widget instance for path __path__ found on target Commerce Cloud administration interface",
    "noMatchingThemeFound": "Theme called __name__ was not found on target Commerce Cloud administration interface",
    "noMatchingElementFound": "Element for __path__ was not found on target Commerce Cloud administration interface",
    "noMatchingStackInstanceFound": "Stack instance for __path__ was not found on target Commerce Cloud administration interface",
    "noMatchingWidgetFound": "Widget for __path__ was not found on target Commerce Cloud administration interface",
    "noMatchingWidgetInstanceFound": "Widget instance for __path__ was not found on target Commerce Cloud administration interface",
    "creatingTheme": "Creating Theme for __path__",
    "creatingWidgetInstance": "Creating Widget instance for __path__",
    "cannotUpdateTheme": "Theme for __path__ does not exist on the Commerce Cloud administration interface",
    "cannotUpdateElement": "Element for __path__ does not exist on the Commerce Cloud administration interface",
    "cannotUpdateStack": "Stack instance for __path__ does not exist on the Commerce Cloud administration interface",
    "cannotUpdateWidget": "Widget for __path__ does not exist on the Commerce Cloud administration interface",
    "cannotSendToDifferentVersion": "You cannot transfer __path__ to __node__ as it is at version __targetVersion__ whereas __configMetadataNode__ is at version __configMetadataVersion__.",
    "cannotSendToSameNode": "You cannot transfer __path__ to __node__ as it was originally grabbed from the same Commerce Cloud administration interface.",
    "pathDoesNotExist": "__path__ does not exist.",
    "insufficientInfoToCreateWidget": "The Widget __widgetName__ cannot be created because the server does not support the necessary endpoints.",

    "proxyListeningMessage": "Intercepting traffic to __node__ on port __port__...",
    "noLocalSubstituteFoundWarning": "No local substitute found for __item__. Do you need a grab?",
    "mappedFileNotFoundWarning": "Resource __resource__ was mapped but local file doesn't exist at: __path__.",
    "doResourceSubstitutionMessage": "Replacing __resource__ with local version at: __path__.",
    "activeThemeText": "Current active theme: __name__.",
    "lessCompilationUnsupportedError": "The version of CCAdminUI at __node__ doesn't expose the Less Compiler endpoint.",
    "compileLessOptionText": "Compile local changes to Less Source in widgets, elements, stacks, or themes. In [auto] mode will start a file watcher daemon and automatically recompile when any Less files are modified.",
    "siteNameOptionText": "Specify the active site context for the current operation. e.g. Less Compilation acts on a per-site basis.",
    "noSiteFoundError": "No matching site found for name or id: __name__.",
    "compilingComponentLess": "Compiling local component styles with Current Active Theme on server.",
    "compilingComponentAndThemeLess": "Compiling local component and __theme__ styles.",
    "noSnippetsAvailableForLocale": "Text snippets have not been downloaded for locale '__locale__'.",

    "oldVersion" : "The source code in this directory was grabbed by a previous version of dcu. Please re-run grab before continuing.",

    "createWidgetOptionText": "Create a new widget",
    "createWidgetInstanceOptionText": "Create a new Widget Instance in the specified widget directory",
    "createElementOptionText": "Create a new element - optionally under a widget directory",
    "createStackOptionText": "Create a new stack",
    "forkOptionText": "Create a new widget, element or stack based on an existing one",

    "createWidgetText" : "Create Widget",
    "enterWidgetNameText" : "Enter the name of the new widget",
    "selectGlobalText" : "Is the new widget global? (global widgets are loaded on every page but have NO display template)",
    "selectI18n" : "Does the new widget require internationalisation?",
    "selectConfigurable" : "Is the new widget configurable?",
    "selectWithHelpText" : "Should the new widget contain example source code?",
    "syncWithServerHelpText" : "Should the new widget be sent to the instance immediately?",
    "globalText" : "Global",
    "stringTooLong" : "Strings cannot exceed 240 characters",
    "stringHasInvalidCharacters" : "The string contains invalid characters",
    "widgetAlreadyExists" : "Widget __widgetName__ already exists",
    "widgetUploadSuccess" : "Widget __widgetName__ was successfully created. Within the Design page, you can drag the widget onto a Page Layout and configure.",
    "globalWidgetUploadSuccess" : "Widget __widgetName__ was successfully created.",
    "widgetUploadFailure" : "Failed to create Widget __widgetName__. The following errors were found:",
    "widgetUploadWarningsFound" : "The following warnings were found:",

    "defaultIsNoText" : "y/N",
    "defaultIsYesText" : "Y/n",
    "yesText" : "Yes",
    "noText" : "No",
    "shortYesText" : "y",
    "shortNoText" : "n",

    "extensionCreatedBy" : "__userName__ on __hostName__",
    "widgetExtensionName" : "Extension containing __widgetName__ Widget",
    "extensionDescription" : "Created automatically by ccw.",
    "widgetExtensionIdRequestDescription" : "Extension ID for __widgetName__ extension requested by ccw on __date__ at __time__.",

    "oldVersion" : "The source code in this directory was grabbed by a previous version of dcu. Please re-run grab before continuing.",

    "pathIsNotDirectory" : "__path__ must be a directory.",

    "failedToCreateInstance" : "Failed to create widget instance __name__",

    "endPointCallFailed": "Unexpected fatal error calling endpoint - Error Code: __errorCode__ Message: __message__ Status: __status__",

    "unsupportedDirectoryType": "Directory __directory__ is not supported by refresh option",
    "noMatchFound": "No match was found for __name__",

    "destinationNodeOptionText" : "URL for the destination Commerce Cloud administration interface, for example, http://localhost:9080",
    "destinationApplicationKeyOptionText" : "The application key to use to log in to the destination Commerce Cloud administration interface",
    "layoutNameOptionText" : "The name of the Page Layout to be acted on",
    "allLayoutsOptionText" : "Perform the operation on all of the Page Layouts on the system",
    "listLayoutsOptionText" : "List Page Layouts",
    "dumpLayoutsOptionText" : "Dump low level information on one or more Page Layouts",
    "deleteLayoutOptionText" : "Delete one or more Page Layout(s)",
    "transferLayoutOptionText" : "Transfer one or more Page Layout(s)",

    "cannotSendPageLayoutsBetweenVersions": "Cannot transfer Page Layouts between __sourceNode__ and __destinationNode__ as they are not at the same version.",
    "copyingPageLayout": "Copying Page Layout __name__",
    "creatingPageLayout": "Creating Page Layout __name__",
    "updatedByPlsuText": "\nUpdated by plsu on __datetime__.",
    "createdByPlsuText": "\nCreated by plsu on __datetime__.",
    "matchingLayoutNotFound": "Page Layout __name__ was not found.",
    "audienceNotFoundOnTarget": "No audience called __name__ was found.",
    "siteNotFoundOnTarget": "No site called __name__ was found.",
    "widgetInstanceNotFoundOnTarget": "No widget instance called __name__ was found.",
    "stackNotFoundOnTarget": "No stack called __name__ was found.",
    "deletingPageLayout": "Deleting Page Layout __name__",
    "cantDeleteDefaultPageLayout": "Page Layout __name__ cannot be deleted as it is a default layout.",
    "experimentNotTransferred": "Experiment __name__ was partially transferred. Please recreate the experiment on the target system."
  }
}
